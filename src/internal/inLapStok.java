/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package internal;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sicat.DBConnect;

/**
 *
 * @author chris
 */
public class inLapStok extends javax.swing.JInternalFrame {

    /**
     * Creates new form inLapStok
     */
    public inLapStok() {
        initComponents();
        selectStok();
        insertJenis();
    }
    
    public void insertJenis(){
        jComboBox1.removeAllItems();
        jComboBox1.addItem("All");
        jComboBox1.addItem("Pemasukan");
        jComboBox1.addItem("Pengeluaran");
    }
    
    public void selectStok(){
        int sisastok = 0;
        String kolom[] = {"ID","Ingredients Name","Stock Available"};
        DefaultTableModel dtm = new DefaultTableModel(null, kolom);
        String SQL = "SELECT *, SUM(qty) AS total FROM penerimaaningredients "
                + " GROUP BY ingredientsId ";
        ResultSet rs = DBConnect.executeQuery(SQL);
        try {
            while(rs.next()){
                String id = rs.getString("ingredientsId");
                String SQL2 = "SELECT ingredientsName FROM ingredients WHERE "
                        + "ingredientsId = '"+id+"'";
                ResultSet rs2 = DBConnect.executeQuery(SQL2);
                while(rs2.next()){
                    String name = rs2.getString("ingredientsName");
                    String SQL3 = "SELECT *,SUM(porsi*qty) AS totalterpakai FROM penjadwalanmenu INNER JOIN menuingredients "
                        + "ON menuingredients.menuId = penjadwalanmenu.menuId";
                    ResultSet rs3 = DBConnect.executeQuery(SQL3);
                    try {
                        while(rs3.next()){
                            int totalterpakai = rs3.getInt("totalterpakai");
                            int total = rs.getInt("total");
                            sisastok = total - totalterpakai;
                            String data[] = {id,name,sisastok+""};
                            dtm.addRow(data);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(inLapStok.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } 
            }
        } catch (SQLException ex) {
            Logger.getLogger(inLapStok.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTable1.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jTextField4 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jButton14.setText("Search");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SimSun", 0, 24)); // NOI18N
        jLabel1.setText("Laporan Stok");

        jButton5.setText("Refresh");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setText("Sejarah Pemakaian Stok:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("Stok Tersedia");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 353, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton14))
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        selectStok();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        /*String search = jTextField4.getText().toString();
        String kolom[] = {"ID","Tanggal","Ingredients Name","Stock Terpakai","Stock Sisa"};
        DefaultTableModel dtm = new DefaultTableModel(null, kolom);
        String SQL = "SELECT * FROM penjadwalanmenu "
                + "AND year(tgl) = '"+jComboBox7.getSelectedItem().toString()+"' "
                + "AND month(tgl) = '"+(jComboBox8.getSelectedIndex()+1)+"'";
        ResultSet rs = DBConnect.executeQuery(SQL);
        try {
            while(rs.next()){
                String id = rs.getString(1);
                String ingname = rs.getString("ingredients.ingredientsName");
                String tgl = rs.getString(3);
                String stockterpakai = rs.getString(4);
                String stocksisa = rs.getString(5);
                String[] data = {id,tgl,ingname,stockterpakai,stocksisa};
                dtm.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(inLapStok.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTable4.setModel(dtm);*/
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        String kolom[] = {"ID","Tanggal","Ingredients ID","Ingredients Name","Qty"};
        DefaultTableModel dtm = new DefaultTableModel(null,kolom);
        if(jComboBox1.equals("Pemasukan")||jComboBox1.equals("All")){
            String SQL2 = "SELECT * FROM penerimaaningredients INNER JOIN ingredients "
                    + "ON ingredients.ingredientsId = penerimaaningredients.ingredientsId";
            System.out.println(SQL2);
            ResultSet rs2 = DBConnect.executeQuery(SQL2);
            try {
                while(rs2.next()){
                    String id = rs2.getString(1);
                    String tgl2 = rs2.getString(2);
                    String ingid = rs2.getString(3);
                    String ingnam = rs2.getString("ingredients.ingredientsName");
                    String qty = rs2.getString(4);
                    String ket = "Pemasukan";
                    String data[] = {id,tgl2,ingid,ingnam,qty};
                    dtm.addRow(data);
                }
            } catch (SQLException ex) {
                Logger.getLogger(inLapStok.class.getName()).log(Level.SEVERE, null, ex);
            }
        } if(jComboBox1.equals("Pengeluaran")||jComboBox1.equals("All")){
            String SQL3 = "SELECT *, (qty * porsi) AS jumlahingredients FROM penjadwalanmenu INNER JOIN menuingredients "
                    + "ON menuingredients.menuId = penjadwalanmenu.menuId";
            ResultSet rs3 = DBConnect.executeQuery(SQL3);
            System.out.println(SQL3);
            try {
                while(rs3.next()){
                    String jumlahingredients = rs3.getString("jumlahingredients");
                    String SQL4 = "SELECT ingredientsId FROM menuingredients";
                    ResultSet rs4 = DBConnect.executeQuery(SQL4);
                    while(rs4.next()){
                        String ingid = rs4.getString("ingredientsId");
                        String SQL5 = "SELECT ingredientsName FROM ingredients WHERE ingredientsId = '"+ingid+"'";
                        ResultSet rs5 = DBConnect.executeQuery(SQL5);
                        while(rs5.next()){
                            String id = rs3.getString("id");
                            String tgl = rs3.getString("tgl");
                            String ingredientsid = rs4.getString("ingredientsId");
                            String ingredientsname = rs5.getString("ingredientsName");
                            String qty = rs3.getString("jumlahingredients");
                            String data[] = {id,tgl,ingredientsid,ingredientsname,qty};
                            dtm.addRow(data);
                        }
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(inLapStok.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jTable4.setModel(dtm);
    }//GEN-LAST:event_jComboBox1ItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField4;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    // End of variables declaration//GEN-END:variables
}
